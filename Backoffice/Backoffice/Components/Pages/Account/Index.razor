@page "/account/details"

@using System.ComponentModel.DataAnnotations
@using Backoffice.Components.Sections
@using Microsoft.AspNetCore.Identity
@using Backoffice.Data

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

<PageTitle>Profile</PageTitle>


<AuthorizeView Context="authContext">
    <Authorized>
        <div class="hidden">
            hej
            @*         <section class="account-details">

            <div class="container">

            <AccountMenu user="@user" />

            <div class="account-details-forms">

            <h1 class="h3">Account Details</h1>

            <p class="h4">Basic Info</p>

            <EditForm Model="user" method="post" FormName="UserContactInformation" id="account-details-basic-info-form" OnValidSubmit="UpdateContactInformation" novalidate>
            <DataAnnotationsValidator />

            <div class="input-div">
            <label for="@user.FirstName">First name</label>
            <InputText @bind-Value="user.FirstName" />
            <ValidationMessage For="() => user.FirstName" />
            </div>

            <div class="input-div">
            <label for="@user.LastName">Last name</label>
            <InputText @bind-Value="user.LastName" />
            <ValidationMessage For="() => user.LastName" />
            </div>

            <div class="input-div">
            <label for="@user.Email">Email</label>
            <InputText @bind-Value="user.Email" />
            <ValidationMessage For="() => user.Email" />
            </div>

            <div class="input-div">
            <label for="@user.PhoneNumber">Phone number</label>
            <InputText @bind-Value="user.PhoneNumber" />
            <ValidationMessage For="() => user.PhoneNumber" />
            </div>

            <div class="buttons">
            <button class="btn-gray">Cancel</button>
            <button type="submit" class="btn-theme">Save Changes</button>
            </div>

            </EditForm>

            </div>
            </div>
            </section>
            *@
        </div>

        <section class="account-details">

            <div class="container">




            </div>

        </section>



    </Authorized>

    <NotAuthorized>
        <Login />
    </NotAuthorized>

</AuthorizeView>



@code {
    private ApplicationUser user { get; set; } = new();

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var result = await UserManager.GetUserAsync(HttpContext.User) ?? null!;

        if(result != null)
        {
            try
            {
                user = result;
            }
            catch { }
        }
    }

    public async Task HandleProfileUpload()
    {

    }
    public async Task UpdateContactInformation()
    {
        
    }
    public async Task UpdateAddressInformation()
    {
        
    }
}